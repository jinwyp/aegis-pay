{
  "swagger": "2.0",
  "info": {
    "description": "财务管理中心 ",
    "version": "0.1",
    "title": "财务管理中心 API",
    "termsOfService": "http://swagger.io/terms/",
    "contact": {
      "email": "wangyupeng@yimei180.com"
    }
  },
  "host": "localhost",
  "basePath": "/api",
  "tags": [
    {
      "name": "financialDetails",
      "description": "财务管理 收支明细"
    },
    {
      "name": "billCenter",
      "description": "结算管理 发票中心 "
    }
  ],
  "schemes": [
    "http"
  ],
  "paths": {
    "/financial/payments/list": {
      "post": {
        "tags": [
          "financialDetails"
        ],
        "summary": "获取收支明细数据列表",
        "operationId": "postFinancialDetails",
        "consumes": [
          "application/json",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "formData",
            "description": "用户ID 测试ID:2719",
            "required": true,
            "type": "integer",
            "minLength": 1,
            "maxLength": 1000,
            "minimum": 1,
            "maximum": 99999
          },
          {
            "name": "page",
            "in": "formData",
            "description": "第几页 用来分页",
            "required": false,
            "type": "integer",
            "minLength": 1,
            "maxLength": 1000,
            "minimum": 1,
            "maximum": 99999
          },
          {
            "name": "pagesize",
            "in": "formData",
            "description": "每页显示条数",
            "required": false,
            "type": "integer",
            "minLength": 1,
            "maxLength": 1000,
            "minimum": 1,
            "maximum": 99999
          },
          {
            "name": "startDate",
            "in": "formData",
            "description": "开始时间 2015-08-26",
            "required": false,
            "type": "string"
          },
          {
            "name": "endDate",
            "in": "formData",
            "description": "结束时间 2017-08-26",
            "required": false,
            "type": "string"
          },
          {
            "name": "type",
            "in": "formData",
            "description": "交易类型 充值1, 提现2, 销售3, 采购4",
            "required": false,
            "type": "string",
            "items": {
              "type": "string",
              "enum": [
                "1",
                "2",
                "3",
                "4"
              ],
              "default": ""
            }
          },
          {
            "name": "searchType",
            "in": "formData",
            "description": "搜索类型",
            "required": false,
            "type": "string",
            "items": {
              "type": "string",
              "enum": [
                "交易流水号",
                "对方账户名称",
                "订单号"
              ],
              "default": "交易流水号"
            }
          },
          {
            "name": "searchContent",
            "in": "formData",
            "description": "交易流水号 / 对方账户名称 / 订单号 文本",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "收支明细列表",
            "schema": {
              "type": "object",
              "properties": {
                "success": {
                  "type": "boolean"
                },
                "data": {
                  "type": "object",
                  "properties" : {

                    "payments" : {
                      "type": "object",
                      "properties" : {

                        "page" : {
                          "type": "number",
                          "description": "当前是第几页"
                        },
                        "pagesize" : {
                          "type": "number",
                          "description": "每页多少条数据"
                        },
                        "count" : {
                          "type": "number",
                          "description": "共多少条数据"
                        },
                        "userFundAccount" : {
                          "type": "string",
                          "description": "易煤网资金账户号"
                        },
                        "typeList" : {
                          "type": "array",
                          "description": "易煤网资金账户号",
                          "items": {
                            "$ref": "#/definitions/PaymentOrderType"
                          }
                        },
                        "list" : {
                          "type": "array",
                          "description": "收支明细列表",
                          "items": {
                            "$ref": "#/definitions/PaymentOrder"
                          }
                        }
                      }
                    }
                  }
                }
              }

            },
            "example" : {
              "application/json": {
                "success": true,
                "data": {
                  "payments": {
                    "page": 1,
                    "pagesize": 10,
                    "rowNum": 10,
                    "totalCount": null,
                    "totalPage": null,
                    "list": [
                      {
                        "fundAccount": "3110710001261037605",
                        "createTime": "092640",
                        "createDate": "20160624",
                        "transactionNO": "J0000000001094",
                        "money": 3.00,
                        "balanceMoney": 5.00,
                        "remarks": "",
                        "otherFundAccount": "3110710001261001470",
                        "otherCompanyName": "资金初始化--上海念瞳半导体科技有限公司",
                        "otherBankName": null,
                        "printCode": "20160624105430228207"
                      },
                      {
                        "fundAccount": "3110710001261037605",
                        "createTime": "111042",
                        "createDate": "20160624",
                        "transactionNO": "J0000000001266",
                        "money": 1.00,
                        "balanceMoney": 6.00,
                        "remarks": "heheheeh",
                        "otherFundAccount": "3110710001261032452",
                        "otherCompanyName": "测试1",
                        "otherBankName": null,
                        "printCode": "20160624111106777601"
                      },
                      {
                        "fundAccount": "3110710001261037605",
                        "createTime": "111042",
                        "createDate": "20160624",
                        "transactionNO": "J0000000001267",
                        "money": 1.00,
                        "balanceMoney": 7.00,
                        "remarks": "heheheeh",
                        "otherFundAccount": "3110710001261032452",
                        "otherCompanyName": "测试1",
                        "otherBankName": null,
                        "printCode": "20160624111106752650"
                      }
                    ],
                    "indexNum": 0,
                    "count": 3,
                    "userId": 2719,
                    "type": null,
                    "startDate": "2015-08-26",
                    "endDate": "2017-08-26",
                    "searchType": 0,
                    "searchContent": null,
                    "userFundAccount": "3110710001261037605",
                    "typeList": [
                      {
                        "type": "paymentstypelist",
                        "sequence": 1,
                        "name": "充值"
                      },
                      {
                        "type": "paymentstypelist",
                        "sequence": 2,
                        "name": "提现"
                      },
                      {
                        "type": "paymentstypelist",
                        "sequence": 3,
                        "name": "销售"
                      },
                      {
                        "type": "paymentstypelist",
                        "sequence": 4,
                        "name": "采购"
                      }
                    ]
                  }
                }
              }
            }
          },
          "409": {
            "description": "Invalid input"
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/ErrorModel"
            }
          }
        }
      }
    },

    "/finance/payments/print": {
      "get": {
        "tags": [
          "financialDetails"
        ],
        "summary": "打印发票数据",
        "operationId": "postFinancialDetailPrint",
        "consumes": [
          "application/json",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "fundAccount",
            "in": "query",
            "description": "账号",
            "required": true,
            "type": "string"
          },
          {
            "name": "printCode",
            "in": "query",
            "description": "打印码",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "发票打印成功",
            "schema": {
              "$ref": "#/definitions/SuccessResponse"
            }
          },
          "409": {
            "description": "Invalid input",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "default": {
            "description": "500 错误 Unexpected error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }

        }
      }
    },

    "/finance/order/seller/receipt": {
      "get": {
        "tags": [
          "billCenter"
        ],
        "summary": "获取发票数据列表",
        "operationId": "billCenter",
        "consumes": [
          "application/json",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "第几页,用于分页",
            "required": false,
            "type": "integer",
            "minLength": 1,
            "maxLength": 1000,
            "minimum": 1,
            "maximum": 99999
          },
          {
            "name": "pagesize",
            "in": "query",
            "description": "每页显示条数",
            "required": false,
            "type": "integer",
            "minLength": 1,
            "maxLength": 1000,
            "minimum": 1,
            "maximum": 99999
          },
          {
            "name": "userId",
            "in": "query",
            "description": "用户ID",
            "required": true,
            "type": "integer",
            "minLength": 2,
            "maxLength": 1000,
            "minimum": 1,
            "maximum": 99999
          },
          {
            "name": "startDate",
            "in": "query",
            "description": "开始时间",
            "required": false,
            "type": "string"
          },
          {
            "name": "endDate",
            "in": "query",
            "description": "结束时间",
            "required": false,
            "type": "string"
          },
          {
            "name": "type",
            "in": "query",
            "description": "开票状态 全部发票0, 待开票1, 已开票2",
            "required": false,
            "type": "string",
            "items": {
              "type": "string",
              "enum": [
                "",
                1,
                2
              ],
              "default": ""
            }
          },
          {
            "name": "content",
            "in": "query",
            "description": "搜索的订单号",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "发票列表",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ReceiptOrder"
              }
            },
            "examples" : {
              "application/json": {
                "success": true,
                "data": {
                  "receiptOrder": {
                    "page": 1,
                    "pagesize": 10,
                    "rowNum": 10,
                    "totalCount": null,
                    "totalPage": null,
                    "list": [
                      {
                        "orderId": 3635,
                        "version": 10,
                        "type": 1,
                        "typeName": "销售",
                        "orderNO": "ZY201606090002",
                        "transactionNO": "222222222",
                        "totalMoney": 16650.00,
                        "otherCompanyName": "内蒙古原煤有限公司",
                        "status": "WaitReceiveReceipt",
                        "statusName": "待收发票",
                        "createTime": null,
                        "settleAccountTime": "2015-08-26 08:42:19"
                      },
                      {
                        "orderId": 3636,
                        "version": 10,
                        "type": 1,
                        "typeName": "销售",
                        "orderNO": "ZY201606090002",
                        "transactionNO": "123456789",
                        "totalMoney": 16650.00,
                        "otherCompanyName": "内蒙古原煤有限公司",
                        "status": "WaitReceiveReceipt",
                        "statusName": "待收发票",
                        "createTime": null,
                        "settleAccountTime": "2015-08-26 09:20:26"
                      }
                    ],
                    "indexNum": 0,
                    "count": 3,
                    "userId": 2719,
                    "type": null,
                    "status": null,
                    "waitCount": 1,
                    "openCount": 2,
                    "startDate": "2015-08-26",
                    "endDate": "2016-01-10",
                    "content": "",
                    "searchContent": null
                  }
                }
              }
            }
          },
          "409": {
            "description": "Invalid input",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "default": {
            "description": "500 错误 Unexpected error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }

        }
      }
    },

    "/mall/order/seller/notice/receiveReceipt": {
      "post": {
        "tags": [
          "billCenter"
        ],
        "summary": "确认已开发票",
        "operationId": "billCenterReceiveReceipt",
        "consumes": [
          "application/json",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "sellerId",
            "in": "formData",
            "description": "seller ID",
            "required": true,
            "type": "integer",
            "minLength": 1,
            "maxLength": 1000,
            "minimum": 1,
            "maximum": 99999
          },
          {
            "name": "orderId",
            "in": "formData",
            "description": "order ID",
            "required": true,
            "type": "integer",
            "minLength": 1,
            "maxLength": 1000,
            "minimum": 1,
            "maximum": 99999
          }
        ],
        "responses": {
          "200": {
            "description": "确认已开票",
            "schema": {
              "$ref": "#/definitions/SuccessResponse"
            }
          },
          "409": {
            "description": "Invalid input",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "default": {
            "description": "500 错误 Unexpected error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },

    "/finance/receipt/delete": {
      "post": {
        "tags": [
          "billCenter"
        ],
        "summary": "开票设置 删除公司抬头",
        "operationId": "billCenterReceiptDelete",
        "consumes": [
          "application/json",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "formData",
            "description": "user ID",
            "required": true,
            "type": "integer",
            "minLength": 1,
            "maxLength": 1000,
            "minimum": 1,
            "maximum": 99999
          }
        ],
        "responses": {
          "200": {
            "description": "发票设置 公司抬头 已删除",
            "schema": {
              "$ref": "#/definitions/SuccessResponse"
            }
          },
          "409": {
            "description": "Invalid input",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "default": {
            "description": "500 错误 Unexpected error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },

    "/pet/findByStatus": {
      "get": {
        "tags": [
          "pet范例"
        ],
        "summary": "Finds Pets by status",
        "description": "Multiple status values can be provided with comma separated strings",
        "operationId": "findPetsByStatus",
        "produces": [
          "application/xml",
          "application/json"
        ],
        "parameters": [
          {
            "name": "status",
            "in": "query",
            "description": "Status values that need to be considered for filter",
            "required": true,
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "available",
                "pending",
                "sold"
              ],
              "default": "available"
            },
            "collectionFormat": "multi"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Pet"
              }
            }
          },
          "400": {
            "description": "Invalid status value"
          }
        },
        "security": [
          {
            "petstore_auth": [
              "write:pets",
              "read:pets"
            ]
          }
        ]
      }
    },
    "/pet/findByTags": {
      "get": {
        "tags": [
          "pet范例"
        ],
        "summary": "Finds Pets by tags",
        "description": "Muliple tags can be provided with comma separated strings. Use tag1, tag2, tag3 for testing.",
        "operationId": "findPetsByTags",
        "produces": [
          "application/xml",
          "application/json"
        ],
        "parameters": [
          {
            "name": "tags",
            "in": "query",
            "description": "Tags to filter by",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Order"
              }
            }
          },
          "400": {
            "description": "Invalid tag value"
          }
        },
        "security": [
          {
            "petstore_auth": [
              "write:pets",
              "read:pets"
            ]
          }
        ],
        "deprecated": true
      }
    },
    "/pet/{petId}": {
      "get": {
        "tags": [
          "pet范例"
        ],
        "summary": "Find pet by ID",
        "description": "Returns a single pet",
        "operationId": "getPetById",
        "produces": [
          "application/xml",
          "application/json"
        ],
        "parameters": [
          {
            "name": "petId",
            "in": "path",
            "description": "ID of pet to return",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/Pet"
            }
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "Pet not found"
          }
        },
        "security": [
          {
            "api_key": []
          }
        ]
      },
      "post": {
        "tags": [
          "pet范例"
        ],
        "summary": "Updates a pet in the store with form data",
        "description": "",
        "operationId": "updatePetWithForm",
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/xml",
          "application/json"
        ],
        "parameters": [
          {
            "name": "petId",
            "in": "path",
            "description": "ID of pet that needs to be updated",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "name",
            "in": "formData",
            "description": "Updated name of the pet",
            "required": false,
            "type": "string"
          },
          {
            "name": "status",
            "in": "formData",
            "description": "Updated status of the pet",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "405": {
            "description": "Invalid input"
          }
        },
        "security": [
          {
            "petstore_auth": [
              "write:pets",
              "read:pets"
            ]
          }
        ]
      },
      "delete": {
        "tags": [
          "pet范例"
        ],
        "summary": "Deletes a pet",
        "description": "",
        "operationId": "deletePet",
        "produces": [
          "application/xml",
          "application/json"
        ],
        "parameters": [
          {
            "name": "api_key",
            "in": "header",
            "required": false,
            "type": "string"
          },
          {
            "name": "petId",
            "in": "path",
            "description": "Pet id to delete",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "Pet not found"
          }
        },
        "security": [
          {
            "petstore_auth": [
              "write:pets",
              "read:pets"
            ]
          }
        ]
      }
    },
    "/pet/{petId}/uploadImage": {
      "post": {
        "tags": [
          "pet范例"
        ],
        "summary": "uploads an image",
        "description": "",
        "operationId": "uploadFile",
        "consumes": [
          "multipart/form-data"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "petId",
            "in": "path",
            "description": "ID of pet to update",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "additionalMetadata",
            "in": "formData",
            "description": "Additional data to pass to server",
            "required": false,
            "type": "string"
          },
          {
            "name": "file",
            "in": "formData",
            "description": "file to upload",
            "required": false,
            "type": "file"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/ApiResponse"
            }
          }
        },
        "security": [
          {
            "petstore_auth": [
              "write:pets",
              "read:pets"
            ]
          }
        ]
      }
    },
    "/user": {
      "post": {
        "tags": [
          "user范例"
        ],
        "summary": "Create user",
        "description": "This can only be done by the logged in user.",
        "operationId": "createUser",
        "produces": [
          "application/xml",
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Created user object",
            "required": true,
            "schema": {
              "$ref": "#/definitions/User"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "successful operation"
          }
        }
      }
    },
    "/user/createWithArray": {
      "post": {
        "tags": [
          "user范例"
        ],
        "summary": "Creates list of users with given input array",
        "description": "",
        "operationId": "createUsersWithArrayInput",
        "produces": [
          "application/xml",
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "List of user object",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/User"
              }
            }
          }
        ],
        "responses": {
          "default": {
            "description": "successful operation"
          }
        }
      }
    },
    "/user/createWithList": {
      "post": {
        "tags": [
          "user范例"
        ],
        "summary": "Creates list of users with given input array",
        "description": "",
        "operationId": "createUsersWithListInput",
        "produces": [
          "application/xml",
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "List of user object",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/User"
              }
            }
          }
        ],
        "responses": {
          "default": {
            "description": "successful operation"
          }
        }
      }
    },
    "/user/login": {
      "get": {
        "tags": [
          "user范例"
        ],
        "summary": "Logs user into the system",
        "description": "",
        "operationId": "loginUser",
        "produces": [
          "application/xml",
          "application/json"
        ],
        "parameters": [
          {
            "name": "username",
            "in": "query",
            "description": "The user name for login",
            "required": true,
            "type": "string"
          },
          {
            "name": "password",
            "in": "query",
            "description": "The password for login in clear text",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "string"
            },
            "headers": {
              "X-Rate-Limit": {
                "type": "integer",
                "format": "int32",
                "description": "calls per hour allowed by the user"
              },
              "X-Expires-After": {
                "type": "string",
                "format": "date-time",
                "description": "date in UTC when token expires"
              }
            }
          },
          "400": {
            "description": "Invalid username/password supplied"
          }
        }
      }
    },
    "/user/logout": {
      "get": {
        "tags": [
          "user范例"
        ],
        "summary": "Logs out current logged in user session",
        "description": "",
        "operationId": "logoutUser",
        "produces": [
          "application/xml",
          "application/json"
        ],
        "parameters": [],
        "responses": {
          "default": {
            "description": "successful operation"
          }
        }
      }
    },
    "/user/{username}": {
      "get": {
        "tags": [
          "user范例"
        ],
        "summary": "Get user by user name",
        "description": "",
        "operationId": "getUserByName",
        "produces": [
          "application/xml",
          "application/json"
        ],
        "parameters": [
          {
            "name": "username",
            "in": "path",
            "description": "The name that needs to be fetched. Use user1 for testing. ",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/User"
            }
          },
          "400": {
            "description": "Invalid username supplied"
          },
          "404": {
            "description": "User not found"
          }
        }
      },
      "put": {
        "tags": [
          "user范例"
        ],
        "summary": "Updated user",
        "description": "This can only be done by the logged in user.",
        "operationId": "updateUser",
        "produces": [
          "application/xml",
          "application/json"
        ],
        "parameters": [
          {
            "name": "username",
            "in": "path",
            "description": "name that need to be updated",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Updated user object",
            "required": true,
            "schema": {
              "$ref": "#/definitions/User"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Invalid user supplied"
          },
          "404": {
            "description": "User not found"
          }
        }
      },
      "delete": {
        "tags": [
          "user范例"
        ],
        "summary": "Delete user",
        "description": "This can only be done by the logged in user.",
        "operationId": "deleteUser",
        "produces": [
          "application/xml",
          "application/json"
        ],
        "parameters": [
          {
            "name": "username",
            "in": "path",
            "description": "The name that needs to be deleted",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "400": {
            "description": "Invalid username supplied"
          },
          "404": {
            "description": "User not found"
          }
        }
      }
    }
  },




  "definitions": {
    "PaymentOrderType": {
      "type": "object",
      "properties": {
        "type": {
          "description": "类型? paymentstypelist",
          "type": "string"
        },
        "sequence": {
          "description": "交易类型值 充值1, 提现2, 销售3, 采购4",
          "type": "integer",
          "format": "int64"
        },
        "name": {
          "description": "交易类型名称",
          "type": "string",
          "enum": [
            "充值",
            "提现",
            "销售",
            "采购"
          ]
        },
        "otherFundAccount": {
          "description": "对方账号",
          "type": "string"
        },
        "otherCompanyName": {
          "description": "对方账号名称",
          "type": "string"
        }
      }
    },
    "PaymentOrder": {
      "type": "object",
      "properties": {
        "transactionNO": {
          "description": "交易流水号",
          "type": "integer",
          "format": "int64"
        },
        "createDate": {
          "description": "交易时间",
          "type": "integer",
          "format": "int64"
        },
        "money": {
          "description": "金额",
          "type": "integer",
          "format": "int32"
        },
        "balanceMoney": {
          "description": "账户余额",
          "type": "integer",
          "format": "int64"
        },
        "tradeType": {
          "description": "交易类型",
          "type": "string",
          "enum": [
            "充值",
            "提现",
            "销售",
            "采购"
          ]
        },
        "otherFundAccount": {
          "description": "对方账号",
          "type": "string"
        },
        "otherCompanyName": {
          "description": "对方账号名称",
          "type": "string"
        }
      }
    },
    "ReceiptOrder": {
      "type": "object",
      "properties": {
        "orderId": {
          "description": "订单号 3634",
          "type": "integer",
          "format": "int64"
        },
        "totalMoney": {
          "description": "金额 16650.00",
          "type": "number",
          "format": "float"
        },
        "settleAccountTime": {
          "description": "交易时间 2015-08-25 21:32:56",
          "type": "string",
          "format": "date"
        },
        "otherCompanyName": {
          "description": "对方账号名称 内蒙古原煤有限公司",
          "type": "string"
        },
        "status": {
          "description": "交易状态 WaitWriteReceipt",
          "type": "string",
          "enum": [
            "提现",
            "销售"
          ]
        },
        "statusName": {
          "description": "交易状态 待卖家开发票 ",
          "type": "string",
          "enum": [
            "提现",
            "销售"
          ]
        }
      }
    },

    "SuccessResponse": {
      "type": "object",
      "properties": {
        "success": {
          "description": "成功 失败",
          "type": "boolean"
        }
      }
    },
    "ErrorResponse": {
      "type": "object",
      "properties": {
        "success": {
          "description": "成功 失败",
          "type": "boolean"
        },
        "error": {
          "description": "出错信息  例如 Required int parameter 'orderId' is not present  或 系统出错了,已经通知我们的团队,我们会尽快修复",
          "type": "string"
        },
        "errorCode": {
          "description": "500",
          "type": "string"
        }
      }
    }
  },
  "externalDocs": {
    "description": "Find out more about Swagger",
    "url": "http://swagger.io"
  }
}